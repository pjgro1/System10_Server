name: Release Merge Deployment
on:
  push:
    branches:
      - 'release-**'
jobs:
  lint:
    # run the npm lint
    runs-on: localLinux
    steps:
      # get the code
      - name: Get code
        uses: actions/checkout@v3
      # install package dependancies
      - name: Install dependencies
        run: npm ci
      # run the lint command
      - name: Lint code
        run: npm run lint
  test:
    # run the npm test configured in the package.json file
    runs-on: localLinux
    steps:
      # get the code
      - name: Get code
        uses: actions/checkout@v3
      # install package dependancies
      - name: Install dependencies
        run: npm ci
      # run the test command
      - name: Test code
        id: run-tests
        run: npm run test
      # only interested in test report if there are failures
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  SonarQube:
    # scan the code
    needs: test
    runs-on: localLinux
    steps:
      # get the code
      - name: Get code
        uses: actions/checkout@v3
  build:
    needs: SonarQube
    runs-on: localLinux
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    runs-on: localLinux
    environment: System10_UAT
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."
  report:
    needs: [lint, deploy]
    if: failure()
    runs-on: localLinux
    steps:
      - name: Output information
        run: | 
          echo "Something went wrong"
          echo $JSON
        env:
          JSON: ${{ toJSON(github) }}
